{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/react/index.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/react-dom/index.js","webpack:///./node_modules/react/cjs/react.production.min.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/scheduler/index.js","webpack:///./node_modules/scheduler/cjs/scheduler.production.min.js","webpack:///./node_modules/three/build/three.module.js","webpack:///./components/middleground/ThreeScene.jsx","webpack:///./components/App.jsx","webpack:///./SillyCircle.jsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","TypeError","toObject","arguments","length","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","k","for","q","u","v","w","x","y","z","A","B","C","iterator","D","a","b","e","encodeURIComponent","g","h","f","Error","replace","framesToPop","aa","E","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","F","G","this","props","context","refs","updater","H","I","isReactComponent","setState","forceUpdate","J","constructor","isPureReactComponent","K","current","currentDispatcher","L","M","ref","__self","__source","N","children","Array","defaultProps","$$typeof","type","_owner","O","P","Q","R","pop","result","keyPrefix","func","count","S","push","V","T","U","isArray","next","done","=",":","escape","toString","ca","da","W","ba","X","Children","toArray","only","createRef","Component","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","render","lazy","_ctor","_status","_result","memo","compare","Fragment","StrictMode","Suspense","createElement","cloneElement","createFactory","isValidElement","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","unstable_ConcurrentMode","unstable_Profiler","Y","default","Z","ea","fa","ha","ia","ja","onError","ka","slice","apply","ma","na","oa","indexOf","pa","extractEvents","eventTypes","qa","phasedRegistrationNames","ra","registrationName","sa","ta","dependencies","ua","va","wa","xa","currentTarget","la","ya","concat","za","Aa","Ba","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ca","injectEventPluginOrder","injectEventPluginsByName","Da","stateNode","disabled","Ea","Fa","Math","random","Ga","Ha","Ia","parentNode","tag","Ja","Ka","La","Ma","return","Na","dispatchConfig","Oa","_targetInst","Pa","Qa","Ra","Sa","window","document","Ta","toLowerCase","Ua","animationend","animationiteration","animationstart","transitionend","Va","Wa","Xa","style","animation","transition","Ya","Za","$a","ab","bb","cb","eb","fb","gb","textContent","hb","ib","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","kb","eventPool","lb","destructor","jb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","extend","mb","data","nb","ob","pb","qb","documentMode","rb","sb","tb","ub","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","vb","wb","keyCode","xb","detail","yb","Bb","locale","which","zb","ctrlKey","altKey","metaKey","char","Ab","Cb","Db","Eb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","color","date","datetime","datetime-local","email","month","number","password","range","search","tel","text","time","url","week","Qb","nodeName","Rb","srcElement","correspondingUseElement","nodeType","Sb","setAttribute","Tb","Vb","_valueTracker","getOwnPropertyDescriptor","set","configurable","getValue","setValue","stopTracking","Ub","Wb","checked","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","displayName","nc","_debugOwner","_debugSource","fileName","lineNumber","oc","pc","qc","rc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","vc","xc","toUpperCase","yc","tc","isNaN","uc","test","sc","removeAttribute","setAttributeNS","zc","Ac","defaultChecked","defaultValue","_wrapperState","initialChecked","Bc","initialValue","controlled","Cc","Dc","Ec","Fc","ownerDocument","activeElement","tabIndex","Gc","change","Hc","Jc","Kc","Lc","Mc","Nc","Oc","Pc","detachEvent","Qc","Rc","attachEvent","Sc","Tc","Uc","Vc","_isInputEventSupported","Wc","view","Xc","Alt","Control","Meta","Shift","Yc","getModifierState","Zc","$c","ad","bd","cd","dd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","ed","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","fd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","gd","defaultView","parentWindow","alternate","hd","id","jd","kd","effectTag","ld","nd","child","sibling","md","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","rd","charCode","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","location","repeat","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Ad","Bd","Cd","isInteractive","Dd","isInteractiveTopLevelEventType","Ed","Fd","Gd","targetInst","ancestors","containerInfo","topLevelType","Hd","Id","Jd","addEventListener","Kd","Ld","Md","Nd","Od","Pd","body","Qd","firstChild","Rd","node","offset","nextSibling","Td","HTMLIFrameElement","contentDocument","Ud","contentEditable","Vd","Wd","select","Xd","Yd","Zd","$d","ae","start","selectionStart","end","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","be","onSelect","ee","de","fe","options","selected","defaultSelected","ge","dangerouslySetInnerHTML","he","ie","je","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","ke","html","mathml","svg","le","me","ne","oe","namespaceURI","innerHTML","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pe","lastChild","nodeValue","qe","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","re","se","trim","te","setProperty","charAt","substring","ue","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","ve","we","is","xe","blur","focus","ye","ze","Ae","Be","autoFocus","Ce","__html","De","setTimeout","Ee","clearTimeout","Fe","Ge","Set","He","Ie","Je","Ke","Le","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Me","Ne","Oe","Pe","getChildContext","Qe","__reactInternalMemoizedMergedChildContext","Re","Se","Te","Ue","We","elementType","index","pendingProps","firstContextDependency","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Xe","Ze","$e","af","bf","cf","df","pendingChildren","implementation","ef","didError","earliestPendingTime","latestPendingTime","ff","gf","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","hf","nextExpirationTimeToWorkOn","jf","kf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","lf","mf","payload","callback","nf","of","pf","qf","rf","sf","tf","uf","vf","stack","wf","xf","yf","zf","Af","Bf","Cf","Df","observedBits","Ef","Ff","Gf","Hf","If","documentElement","tagName","Jf","Kf","Lf","Nf","Of","Pf","Uf","_reactInternalFiber","Qf","Rf","Sf","Tf","Vf","shouldComponentUpdate","Wf","contextType","readContext","state","Xf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Zf","$f","_stringRef","ag","bg","Map","delete","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","vg","getDerivedStateFromError","wg","pendingContext","xg","timedOutAt","fallback","yg","then","Mf","Ye","element","hydrate","hidden","unstable_observedBits","zg","Ag","Bg","Fg","Gg","Hg","Ig","Jg","Kg","destroy","componentWillUnmount","Lg","Mg","Ng","insertBefore","_reactRootContainer","onclick","Og","wasMultiple","multiple","display","Pg","Qg","Rg","componentDidCatch","Sg","add","componentStack","Tg","onClick","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","unstable_cancelCallback","eh","createElementNS","createTextNode","fh","gh","pendingCommitExpirationTime","hh","maxDuration","ih","has","finishedWork","jh","kh","lh","mh","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","zh","unstable_now","Ah","Bh","Ch","Dh","Eh","unstable_scheduleCallback","Fh","timeout","timeoutHandle","Hh","Ih","nextScheduledRoot","Jh","Kh","Lh","unstable_shouldYield","_onComplete","Mh","firstBatch","_expirationTime","_defer","rangeCount","db","focusedElem","selectionRange","Th","__reactInternalSnapshotBeforeUpdate","Sd","contains","compareDocumentPosition","min","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","Fb","Gb","wc","ci","Cg","Dg","di","Ic","Eg","ce","Nh","Oh","Ph","Qh","Rh","Sh","Vh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Wh","_didCommit","_onCommit","Xh","_internalRoot","Yh","$h","legacy_renderSubtreeIntoContainer","hasAttribute","Zh","ai","Uh","querySelectorAll","JSON","stringify","form","commit","unmount","createBatch","bi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_flushControlled","Events","unstable_createRoot","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Ve","findHostInstanceByFiber","bundleType","rendererPackageName","ei","fi","previous","priorityLevel","requestAnimationFrame","cancelAnimationFrame","performance","_schedMock","postMessage","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_runWithPriority","unstable_wrapCallback","unstable_getCurrentPriorityLevel","EventDispatcher","undefined","Number","EPSILON","pow","isInteger","isFinite","floor","sign","Function","match","output","nextKey","listener","_listeners","listeners","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","max","vector","matrix","zero","one","v1","quaternion","REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","d1","d2","d3","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","Matrix4","elements","Quaternion","_x","_y","_z","_w","Vector3","Matrix3","defineProperties","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","warn","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v2","equals","fromArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","identity","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","makeRotationFromQuaternion","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","right","bottom","near","far","makeOrthographic","slerp","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","isQuaternion","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","angleTo","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","matrixWorld","transformDirection","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","isMatrix3","setFromMatrix4","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","points","closestPoint","box","sphere","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","src","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","DataTexture","Box3","Infinity","Sphere","Plane","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","isTexture","updateMatrix","toJSON","isRootObject","textures","metadata","generator","wrap","images","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getW","isWebGLRenderTarget","setSize","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","triangle","distanceToPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","hslA","hslB","hsl","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsUtils","merge","uniforms","merged","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","handleAlpha","string","parseFloat","exec","components","parseInt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","UniformsLib","diffuse","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","matcap","dashed","dashSize","totalSize","depth","background","t2D","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","frame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","bufferType","usage","dynamic","createBuffer","bindBuffer","bufferData","onUploadCallback","Float32Array","Float64Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Int8Array","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","Face3","materialIndex","vertexNormals","vertexColors","Euler","_order","DefaultOrder","Layers","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","layers","q1","object3DId","Object3D","parent","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","serialize","library","isMesh","isLine","isPoints","parameters","shape","material","uuids","extractFromCache","cache","values","recursive","parse","obj","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","computeBoundingBox","fromBufferGeometry","indices","positions","uv2","addFace","group","computeFaceNormals","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","getAttribute","clearGroups","setDrawRange","needsUpdate","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","morphAttribute","segCenter","segDir","barycoord","vab","vac","vbc","vap","vbp","vcp","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","ShaderMaterial","defines","linewidth","wireframe","wireframeLinewidth","clipping","skinning","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","setValues","Ray","origin","Triangle","MeshBasicMaterial","combine","wireframeLinecap","wireframeLinejoin","Mesh","drawMode","updateMorphTargets","WebGLBackground","renderer","objects","planeMesh","boxMesh","clearColor","clearAlpha","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","scene","forceClear","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","WebGLBufferRenderer","info","capabilities","setMode","drawArrays","renderInstances","extension","isWebGL2","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","reset","instanceCount","absNumericalSort","WebGLMorphtargets","influencesList","morphInfluences","program","objectInfluences","morphTargetInfluences","influences","influence","getUniforms","WebGLObjects","updateList","CubeTexture","DataTexture3D","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","sizeAttenuation","gapSize","srcPlanes","dstPlanes","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","uv1","uv3","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","d5","d6","isMeshBasicMaterial","setDrawMode","morphTargetDictionary","ml","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","tl","targets","uvs_f","isDataTexture3D","emptyTexture","emptyTexture3d","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","getShaderInfoLog","addLineNumbers","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","getError","diagnostics","prefix","deleteShader","getAttributes","getActiveAttrib","getAttribLocation","fetchAttributeLocations","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","nVertexUniforms","nVertexMatrices","allocateBones","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","WebGLProperties","painterSortStable","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","renderItem","WebGLRenderLists","lists","list","UniformsCache","light","halfWidth","halfHeight","three_module_count","WebGLLights","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","setup","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","faceCount","_state","setTest","setScissorTest","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","WebGLState","utils","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","setBlending","blendEquationSeparate","convert","blendFuncSeparate","blendFunc","setFlipSided","frontFace","setCullFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","initAttributes","enableAttribute","disableUnusedAttributes","disableVertexAttribArray","getCompressedTextureFormats","formats","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","_canvas","_videoTextures","clampToMaxSize","maxSize","textureNeedsGenerateMipmaps","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","filterFallback","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureParameters","textureType","isPowerOfTwoImage","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","pixelStorei","textureNeedsPowerOfTwo","HTMLImageElement","ImageBitmap","makePowerOfTwo","glInternalFormat","mipmap","isDepthTexture","isCompressedTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","isCompressed","cubeImage","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","updateRenderTargetMipmap","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","Group","Camera","projectionMatrixInverse","PerspectiveCamera","fov","aspect","filmGauge","filmOffset","ArrayCamera","cameras","isMeshDepthMaterial","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isArrayCamera","matrixPosition","offsetMatrix","identityMatrix","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","frameOfReferenceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","bounds","currentSize","currentPixelRatio","cameraVR","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","getController","controller","getDevice","setDevice","setFramebufferScaleFactor","setFrameOfReferenceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","pressed","updateControllers","getStandingMatrix","submitFrame","WebXRManager","session","frameOfReference","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","updateCamera","XRDevice","setCompatibleXRDevice","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","getInputSources","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","targetRay","transformMatrix","pointerMatrix","THREE","WebGLRenderer","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","rangeMin","rangeMax","message","initGLContext","vr","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","isLight","initMaterial","warned","renderObjects","overrideMaterial","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","opaqueObjects","transparentObjects","textureUnit","setTexture","readRenderTargetPixels","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","InterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","ol","edge","edges","ParametricGeometry","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateSegment","getPointAt","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","addLevel","getObjectForDistance","bone","isBone","getBoneByName","gbone","pos","rotq","scl","sw","vec","skinWeight","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","sum","signedArea","insertNode","removeNode","again","three_module_area","prev","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","an","bp","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","fillStyle","fillRect","Materials","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","parseKeyframeTrack","json","trackType","typeName","getTrackTypeForValueTypeName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","DataTextureLoader","_parser","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","setCrossOrigin","urls","isJPEG","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","MaterialLoader","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","getTexture","shading","setTextures","LoaderUtils","lastIndexOf","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","BlendingMode","textureLoader","materialLoader","Loader","JSONLoader","ObjectLoader","resourcePath","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","setResourcePath","isBitSet","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","setOptions","res","blob","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","instance","eyeSep","eyeRight","eyeLeft","AudioContext","webkitAudioContext","AudioLoader","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","Clock","autoStart","oldTime","running","AudioListener","gain","createGain","connect","destination","timeDelta","Audio","getInput","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","bufferCopy","decodeAudioData","audioBuffer","xmin","xmax","eyeSepOnProjection","ymax","getElapsedTime","getDelta","newTime","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","clock","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","setValueAtTime","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","restoreOriginalState","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","reservedRe","startP","startEnd","lineGeometry","coneGeometry","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InstancedInterleavedBuffer","InstancedBufferAttribute","ascSort","intersectObject","Box2","Line3","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","firstValidIndex","nCachedObjects_","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","RegExp","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","PointCloud","setFromCamera","coords","intersectObjects","other","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","setPoint","setColor","Spline","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","extractUrlBase","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","ThreeScene","_classCallCheck","_getPrototypeOf","windowHalfX","innerWidth","windowHalfY","innerHeight","mouseX","mouseY","_assertThisInitialized","renderScene","onWindowResize","onDocumentMouseMove","React","mount","clientWidth","clientHeight","devicePixelRatio","geometry1","positions1","wireframeMaterial","frameId","_this2","react_default","App","middleground_ThreeScene","getElementById","ReactDOM","components_App"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.6.1\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,A=n?Symbol.for(\"react.memo\"):\n60115,B=n?Symbol.for(\"react.lazy\"):60116,C=\"function\"===typeof Symbol&&Symbol.iterator;function aa(a,b,e,c,d,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[e,c,d,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},F={};\nfunction G(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}G.prototype.isReactComponent={};G.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}var J=I.prototype=new H;\nJ.constructor=I;k(J,G.prototype);J.isPureReactComponent=!0;var K={current:null,currentDispatcher:null},L=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};\nfunction N(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:d,_owner:K.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,e,c){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+U(d,h);g+=T(d,f,e,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,h++),g+=T(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function V(a,b,e){return null==a?0:T(a,\"\",b,e)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,function(a){return a}):null!=a&&(O(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+e)),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(P,\"$&/\")+\"/\");b=R(b,g,c,d);V(a,da,b);S(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=R(null,null,b,e);V(a,ca,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){O(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:G,PureComponent:I,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:B,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:A,type:a,compare:void 0===b?null:b}},Fragment:r,StrictMode:t,Suspense:z,createElement:N,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;\nif(null!=b){void 0!==b.ref&&(h=b.ref,f=K.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=N.bind(null,a);b.type=a;return b},isValidElement:O,version:\"16.6.3\",\n__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:K,assign:k}};X.unstable_ConcurrentMode=x;X.unstable_Profiler=u;var Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n","/** @license React v16.6.1\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),ba=require(\"scheduler\");function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\nvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\nfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\nfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=wa(c);la(d,b,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)xa(a,b[d],c[d]);else b&&xa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ca={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\nfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\nreturn c}function Ea(a){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(za(a,Ba),Aa?t(\"95\"):void 0,ha))throw a=ia,ha=!1,ia=null,a;}var Fa=Math.random().toString(36).slice(2),Ga=\"__reactInternalInstance$\"+Fa,Ha=\"__reactEventHandlers$\"+Fa;function Ia(a){if(a[Ga])return a[Ga];for(;!a[Ga];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ga];return 5===a.tag||6===a.tag?a:null}function Ja(a){a=a[Ga];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ka(a){if(5===a.tag||6===a.tag)return a.stateNode;t(\"33\")}function La(a){return a[Ha]||null}function Ma(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Na(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\nfunction Oa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Ma(b);for(b=c.length;0<b--;)Na(c[b],\"captured\",a);for(b=0;b<c.length;b++)Na(c[b],\"bubbled\",a)}}function Pa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Qa(a){a&&a.dispatchConfig.registrationName&&Pa(a._targetInst,null,a)}\nfunction Ra(a){za(a,Oa)}var Sa=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Ta(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ua={animationend:Ta(\"Animation\",\"AnimationEnd\"),animationiteration:Ta(\"Animation\",\"AnimationIteration\"),animationstart:Ta(\"Animation\",\"AnimationStart\"),transitionend:Ta(\"Transition\",\"TransitionEnd\")},Va={},Wa={};\nSa&&(Wa=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ua.animationend.animation,delete Ua.animationiteration.animation,delete Ua.animationstart.animation),\"TransitionEvent\"in window||delete Ua.transitionend.transition);function Xa(a){if(Va[a])return Va[a];if(!Ua[a])return a;var b=Ua[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Wa)return Va[a]=b[c];return a}\nvar Ya=Xa(\"animationend\"),Za=Xa(\"animationiteration\"),$a=Xa(\"animationstart\"),ab=Xa(\"transitionend\"),bb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),cb=null,eb=null,fb=null;\nfunction gb(){if(fb)return fb;var a,b=eb,c=b.length,d,e=\"value\"in cb?cb.value:cb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return fb=e.slice(a,1<d?1-d:void 0)}function hb(){return!0}function ib(){return!1}\nfunction A(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?hb:ib;this.isPropagationStopped=ib;return this}\nn(A.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=hb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=hb)},persist:function(){this.isPersistent=hb},isPersistent:ib,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ib;this._dispatchInstances=this._dispatchListeners=null}});A.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nA.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;jb(c);return c};jb(A);function kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function lb(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction jb(a){a.eventPool=[];a.getPooled=kb;a.release=lb}var mb=A.extend({data:null}),nb=A.extend({data:null}),ob=[9,13,27,32],pb=Sa&&\"CompositionEvent\"in window,qb=null;Sa&&\"documentMode\"in document&&(qb=document.documentMode);\nvar rb=Sa&&\"TextEvent\"in window&&!qb,sb=Sa&&(!pb||qb&&8<qb&&11>=qb),tb=String.fromCharCode(32),ub={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},vb=!1;\nfunction wb(a,b){switch(a){case \"keyup\":return-1!==ob.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function xb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var yb=!1;function zb(a,b){switch(a){case \"compositionend\":return xb(b);case \"keypress\":if(32!==b.which)return null;vb=!0;return tb;case \"textInput\":return a=b.data,a===tb&&vb?null:a;default:return null}}\nfunction Ab(a,b){if(yb)return\"compositionend\"===a||!pb&&wb(a,b)?(a=gb(),fb=eb=cb=null,yb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return sb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Bb={eventTypes:ub,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(pb)b:{switch(a){case \"compositionstart\":e=ub.compositionStart;break b;case \"compositionend\":e=ub.compositionEnd;break b;case \"compositionupdate\":e=ub.compositionUpdate;break b}e=void 0}else yb?wb(a,c)&&(e=ub.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=ub.compositionStart);e?(sb&&\"ko\"!==c.locale&&(yb||e!==ub.compositionStart?e===ub.compositionEnd&&yb&&(f=gb()):(cb=d,eb=\"value\"in cb?cb.value:cb.textContent,yb=\n!0)),e=mb.getPooled(e,b,c,d),f?e.data=f:(f=xb(c),null!==f&&(e.data=f)),Ra(e),f=e):f=null;(a=rb?zb(a,c):Ab(a,c))?(b=nb.getPooled(ub.beforeInput,b,c,d),b.data=a,Ra(b)):b=null;return null===f?b:null===b?f:[f,b]}},Cb=null,Db=null,Eb=null;function Hb(a){if(a=va(a)){\"function\"!==typeof Cb?t(\"280\"):void 0;var b=ua(a.stateNode);Cb(a.stateNode,a.type,b)}}function Ib(a){Db?Eb?Eb.push(a):Eb=[a]:Db=a}function Jb(){if(Db){var a=Db,b=Eb;Eb=Db=null;Hb(a);if(b)for(a=0;a<b.length;a++)Hb(b[a])}}\nfunction Kb(a,b){return a(b)}function Lb(a,b,c){return a(b,c)}function Mb(){}var Nb=!1;function Ob(a,b){if(Nb)return a(b);Nb=!0;try{return Kb(a,b)}finally{if(Nb=!1,null!==Db||null!==Eb)Mb(),Jb()}}var Pb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Pb[a.type]:\"textarea\"===b?!0:!1}\nfunction Rb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Sb(a){if(!Sa)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Tb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ub(a){var b=Tb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Vb(a){a._valueTracker||(a._valueTracker=Ub(a))}function Wb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Tb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar Xb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Yb=/^(.*)[\\\\\\/]/,D=\"function\"===typeof Symbol&&Symbol.for,Zb=D?Symbol.for(\"react.element\"):60103,$b=D?Symbol.for(\"react.portal\"):60106,ac=D?Symbol.for(\"react.fragment\"):60107,bc=D?Symbol.for(\"react.strict_mode\"):60108,cc=D?Symbol.for(\"react.profiler\"):60114,dc=D?Symbol.for(\"react.provider\"):60109,ec=D?Symbol.for(\"react.context\"):60110,fc=D?Symbol.for(\"react.concurrent_mode\"):60111,gc=D?Symbol.for(\"react.forward_ref\"):60112,hc=D?Symbol.for(\"react.suspense\"):\n60113,ic=D?Symbol.for(\"react.memo\"):60115,jc=D?Symbol.for(\"react.lazy\"):60116,kc=\"function\"===typeof Symbol&&Symbol.iterator;function lc(a){if(null===a||\"object\"!==typeof a)return null;a=kc&&a[kc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction mc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case fc:return\"ConcurrentMode\";case ac:return\"Fragment\";case $b:return\"Portal\";case cc:return\"Profiler\";case bc:return\"StrictMode\";case hc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ec:return\"Context.Consumer\";case dc:return\"Context.Provider\";case gc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ic:return mc(a.type);case jc:if(a=1===a._status?a._result:null)return mc(a)}return null}function nc(a){var b=\"\";do{a:switch(a.tag){case 2:case 16:case 0:case 1:case 5:case 8:case 13:var c=a._debugOwner,d=a._debugSource,e=mc(a.type);var f=null;c&&(f=mc(c.type));c=e;e=\"\";d?e=\" (at \"+d.fileName.replace(Yb,\"\")+\":\"+d.lineNumber+\")\":f&&(e=\" (created by \"+f+\")\");f=\"\\n    in \"+(c||\"Unknown\")+e;break a;default:f=\"\"}b+=f;a=a.return}while(a);return b}\nvar oc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\nfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(oc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function E(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var F={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){F[a]=new E(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];F[b]=new E(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){F[a]=new E(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){F[a]=new E(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){F[a]=new E(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){F[a]=new E(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){F[a]=new E(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){F[a]=new E(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){F[a]=new E(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function xc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\nxc);F[b]=new E(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,xc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,xc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});F.tabIndex=new E(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction yc(a,b,c,d){var e=F.hasOwnProperty(b)?F[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction zc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ac(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Bc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=zc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Cc(a,b){b=b.checked;null!=b&&yc(a,\"checked\",b,!1)}\nfunction Dc(a,b){Cc(a,b);var c=zc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Ec(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Ec(a,b.type,zc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Fc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Ec(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Gc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Hc(a,b,c){a=A.getPooled(Gc.change,a,b,c);a.type=\"change\";Ib(c);Ra(a);return a}var Jc=null,Kc=null;function Lc(a){Ea(a)}\nfunction Mc(a){var b=Ka(a);if(Wb(b))return a}function Nc(a,b){if(\"change\"===a)return b}var Oc=!1;Sa&&(Oc=Sb(\"input\")&&(!document.documentMode||9<document.documentMode));function Pc(){Jc&&(Jc.detachEvent(\"onpropertychange\",Qc),Kc=Jc=null)}function Qc(a){\"value\"===a.propertyName&&Mc(Kc)&&(a=Hc(Kc,a,Rb(a)),Ob(Lc,a))}function Rc(a,b,c){\"focus\"===a?(Pc(),Jc=b,Kc=c,Jc.attachEvent(\"onpropertychange\",Qc)):\"blur\"===a&&Pc()}function Sc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Mc(Kc)}\nfunction Tc(a,b){if(\"click\"===a)return Mc(b)}function Uc(a,b){if(\"input\"===a||\"change\"===a)return Mc(b)}\nvar Vc={eventTypes:Gc,_isInputEventSupported:Oc,extractEvents:function(a,b,c,d){var e=b?Ka(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Nc:Qb(e)?Oc?f=Uc:(f=Sc,g=Rc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Tc);if(f&&(f=f(a,b)))return Hc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Ec(e,\"number\",e.value)}},Wc=A.extend({view:null,detail:null}),Xc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Yc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Xc[a])?!!b[a]:!1}function Zc(){return Yc}\nvar $c=0,ad=0,bd=!1,cd=!1,dd=Wc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Zc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=$c;$c=a.screenX;return bd?\"mousemove\"===a.type?a.screenX-b:0:(bd=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=ad;ad=a.screenY;return cd?\"mousemove\"===a.type?a.screenY-b:0:(cd=!0,0)}}),ed=dd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),fd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},gd={eventTypes:fd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ia(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=dd,h=fd.mouseLeave,k=fd.mouseEnter,l=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=ed,h=fd.pointerLeave,k=fd.pointerEnter,l=\"pointer\";var m=null==f?e:Ka(f);e=null==b?e:Ka(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Ma(g))l++;g=0;for(k=e;k;k=Ma(k))g++;for(;0<l-g;)b=Ma(b),l--;for(;0<g-l;)e=Ma(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Ma(b);e=Ma(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\nf.alternate;if(null!==l&&l===e)break;b.push(f);f=Ma(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Ma(d)}for(d=0;d<b.length;d++)Pa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Pa(f[d],\"captured\",c);return[a,c]}},hd=Object.prototype.hasOwnProperty;function id(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\nfunction jd(a,b){if(id(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!hd.call(b,c[d])||!id(a[c[d]],b[c[d]]))return!1;return!0}function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?t(\"188\"):void 0}\nfunction md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}3!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar od=A.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=A.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=Wc.extend({relatedTarget:null});function rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=Wc.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Zc,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=dd.extend({dataTransfer:null}),wd=Wc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Zc}),xd=A.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=dd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[Ya,\"animationEnd\"],[Za,\"animationIteration\"],[$a,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ab,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=dd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case Ya:case Za:case $a:a=od;break;case ab:a=xd;break;case \"scroll\":a=Wc;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=ed;break;default:a=A}b=a.getPooled(e,b,c,d);Ra(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ia(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Rb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ea(g)}}var Hd=!0;\nfunction G(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!1)}function Kd(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!0)}function Id(a,b){Lb(Jd,a,b)}\nfunction Jd(a,b){if(Hd){var c=Rb(b);c=Ia(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Ob(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}var Ld={},Md=0,Nd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Od(a){Object.prototype.hasOwnProperty.call(a,Nd)||(a[Nd]=Md++,Ld[a[Nd]]={});return Ld[a[Nd]]}function Pd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Td(){for(var a=window,b=Pd();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Pd(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=Sa&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Pd(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&jd(Zd,c)?null:(Zd=c,a=A.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ra(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Od(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ka(b):window;switch(a){case \"focus\":if(Qb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=La;va=Ja;wa=Ka;Ca.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:gd,ChangeEventPlugin:Vc,SelectEventPlugin:be,BeforeInputEventPlugin:Bb});function de(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction ee(a,b){a=n({children:void 0},b);if(b=de(b.children))a.children=b;return a}function fe(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+zc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction ge(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function he(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:zc(c)}}\nfunction ie(a,b){var c=zc(b.value),d=zc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function je(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var ke={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction le(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function me(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?le(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ne=void 0,oe=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==ke.svg||\"innerHTML\"in a)a.innerHTML=b;else{ne=ne||document.createElement(\"div\");ne.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ne.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},re=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qe).forEach(function(a){re.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qe[b]=qe[a]})});function se(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qe.hasOwnProperty(a)&&qe[a]?(\"\"+b).trim():b+\"px\"}\nfunction te(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=se(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ue=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ve(a,b){b&&(ue[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\nfunction we(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction xe(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Od(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Kd(\"scroll\",a);break;case \"focus\":case \"blur\":Kd(\"focus\",a);Kd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Sb(e)&&Kd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===bb.indexOf(e)&&G(e,a)}c[e]=!0}}}function ye(){}var ze=null,Ae=null;\nfunction Be(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ce(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var De=\"function\"===typeof setTimeout?setTimeout:void 0,Ee=\"function\"===typeof clearTimeout?clearTimeout:void 0;\nfunction Fe(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ge(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var He=[],Ie=-1;function H(a){0>Ie||(a.current=He[Ie],He[Ie]=null,Ie--)}function I(a,b){Ie++;He[Ie]=a.current;a.current=b}var Je={},J={current:Je},K={current:!1},Ke=Je;\nfunction Le(a,b){var c=a.type.contextTypes;if(!c)return Je;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Me(a){H(K,a);H(J,a)}function Ne(a){H(K,a);H(J,a)}\nfunction Oe(a,b,c){J.current!==Je?t(\"168\"):void 0;I(J,b,a);I(K,c,a)}function Pe(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",mc(b)||\"Unknown\",e);return n({},c,d)}function Qe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Je;Ke=J.current;I(J,b,a);I(K,K.current,a);return!0}\nfunction Re(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Pe(a,b,Ke),d.__reactInternalMemoizedMergedChildContext=b,H(K,a),H(J,a),I(J,b,a)):H(K,a);I(K,c,a)}var Se=null,Te=null;function Ue(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Ve(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Se=Ue(function(a){return b.onCommitFiberRoot(c,a)});Te=Ue(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction We(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function M(a,b,c,d){return new We(a,b,c,d)}\nfunction Xe(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Ye(a){if(\"function\"===typeof a)return Xe(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gc)return 11;if(a===ic)return 14}return 2}\nfunction Ze(a,b){var c=a.alternate;null===c?(c=M(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.firstContextDependency=a.firstContextDependency;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction $e(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Xe(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ac:return af(c.children,e,f,b);case fc:return bf(c,e|3,f,b);case bc:return bf(c,e|2,f,b);case cc:return a=M(12,c,b,e|4),a.elementType=cc,a.type=cc,a.expirationTime=f,a;case hc:return a=M(13,c,b,e),a.elementType=hc,a.type=hc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case dc:g=10;break a;case ec:g=9;break a;case gc:g=11;break a;case ic:g=\n14;break a;case jc:g=16;d=null;break a}t(\"130\",null==a?a:typeof a,\"\")}b=M(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function af(a,b,c,d){a=M(7,a,d,b);a.expirationTime=c;return a}function bf(a,b,c,d){a=M(8,a,d,b);b=0===(b&1)?bc:fc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function cf(a,b,c){a=M(6,a,null,b);a.expirationTime=c;return a}\nfunction df(a,b,c){b=M(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function ef(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);ff(b,a)}\nfunction gf(a,b){a.didError=!1;var c=a.latestPingedTime;0!==c&&c>=b&&(a.latestPingedTime=0);c=a.earliestPendingTime;var d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);ff(b,a)}\nfunction hf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function ff(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var jf=!1;\nfunction kf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function lf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction mf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function nf(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction of(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=kf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=kf(a.memoizedState),e=c.updateQueue=kf(c.memoizedState)):d=a.updateQueue=lf(e):null===e&&(e=c.updateQueue=lf(d));null===e||d===e?nf(d,b):null===d.lastUpdate||null===e.lastUpdate?(nf(d,b),nf(e,b)):(nf(d,b),e.lastUpdate=b)}\nfunction pf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=kf(a.memoizedState):qf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function qf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=lf(b));return b}\nfunction rf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-2049|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:jf=!0}return d}\nfunction sf(a,b,c,d,e){jf=!1;b=qf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(l=rf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var q=k.expirationTime;q<e?(null===m&&(m=k,null===g&&(f=l)),h<q&&(h=q)):(l=rf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=\n32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\nfunction tf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);uf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;uf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function uf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction vf(a,b){return{value:a,source:b,stack:nc(b)}}var wf={current:null},xf=null,yf=null,zf=null;function Af(a,b){var c=a.type._context;I(wf,c._currentValue,a);c._currentValue=b}function Bf(a){var b=wf.current;H(wf,a);a.type._context._currentValue=b}function Cf(a){xf=a;zf=yf=null;a.firstContextDependency=null}\nfunction Df(a,b){if(zf!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)zf=a,b=1073741823;b={context:a,observedBits:b,next:null};null===yf?(null===xf?t(\"293\"):void 0,xf.firstContextDependency=yf=b):yf=yf.next=b}return a._currentValue}var Ef={},N={current:Ef},Ff={current:Ef},Gf={current:Ef};function Hf(a){a===Ef?t(\"174\"):void 0;return a}\nfunction If(a,b){I(Gf,b,a);I(Ff,a,a);I(N,Ef,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:me(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=me(b,c)}H(N,a);I(N,b,a)}function Jf(a){H(N,a);H(Ff,a);H(Gf,a)}function Kf(a){Hf(Gf.current);var b=Hf(N.current);var c=me(b,a.type);b!==c&&(I(Ff,a,a),I(N,c,a))}function Lf(a){Ff.current===a&&(H(N,a),H(Ff,a))}\nfunction O(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}function Mf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:throw a._status=0,b=a._ctor,b=b(),b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)}),a._result=b,b;}}var Nf=Xb.ReactCurrentOwner,Of=(new aa.Component).refs;\nfunction Pf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Uf={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Qf();d=Rf(d,a);var e=mf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Sf();of(a,e);Tf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Qf();d=Rf(d,a);var e=mf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Sf();of(a,e);Tf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Qf();c=Rf(c,a);var d=mf(c);d.tag=\n2;void 0!==b&&null!==b&&(d.callback=b);Sf();of(a,d);Tf(a,c)}};function Vf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!jd(c,d)||!jd(e,f):!0}\nfunction Wf(a,b,c){var d=!1,e=Je;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Nf.currentDispatcher.readContext(f):(e=L(b)?Ke:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Le(a,e):Je);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Uf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Xf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Uf.enqueueReplaceState(b,b.state,null)}\nfunction Yf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Of;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Nf.currentDispatcher.readContext(f):(f=L(b)?Ke:J.current,e.context=Le(a,f));f=a.updateQueue;null!==f&&(sf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Pf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\n\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Uf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(sf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Zf=Array.isArray;\nfunction $f(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?t(\"289\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Of&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"290\",a)}return a}\nfunction ag(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction bg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Ze(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=$f(a,b,c),d.return=a,d;d=$e(c.type,c.key,c.props,null,a.mode,d);d.ref=$f(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=df(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,g){if(null===b||7!==b.tag)return b=af(c,a.mode,d,g),b.return=a,b;b=e(b,c,d);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Zb:return c=$e(b.type,b.key,b.props,null,a.mode,c),c.ref=$f(a,null,b),c.return=a,c;case $b:return b=df(b,a.mode,c),b.return=a,b}if(Zf(b)||\nlc(b))return b=af(b,a.mode,c,null),b.return=a,b;ag(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Zb:return c.key===e?c.type===ac?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $b:return c.key===e?l(a,b,c,d):null}if(Zf(c)||lc(c))return null!==e?null:m(a,b,c,d,null);ag(a,c)}return null}function z(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Zb:return a=a.get(null===d.key?c:d.key)||null,d.type===ac?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $b:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Zf(d)||lc(d))return a=a.get(c)||null,m(b,a,d,e,null);ag(b,d)}return null}function B(e,g,h,k){for(var l=null,r=null,m=g,u=g=0,p=null;null!==m&&u<h.length;u++){m.index>u?(p=m,m=null):p=m.sibling;var v=x(e,m,h[u],k);if(null===v){null===m&&(m=p);break}a&&\nm&&null===v.alternate&&b(e,m);g=f(v,g,u);null===r?l=v:r.sibling=v;r=v;m=p}if(u===h.length)return c(e,m),l;if(null===m){for(;u<h.length;u++)if(m=q(e,h[u],k))g=f(m,g,u),null===r?l=m:r.sibling=m,r=m;return l}for(m=d(e,m);u<h.length;u++)if(p=z(m,e,u,h[u],k))a&&null!==p.alternate&&m.delete(null===p.key?u:p.key),g=f(p,g,u),null===r?l=p:r.sibling=p,r=p;a&&m.forEach(function(a){return b(e,a)});return l}function Q(e,g,h,k){var l=lc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;\nfor(var m=l=null,r=g,u=g=0,p=null,v=h.next();null!==r&&!v.done;u++,v=h.next()){r.index>u?(p=r,r=null):p=r.sibling;var y=x(e,r,v.value,k);if(null===y){r||(r=p);break}a&&r&&null===y.alternate&&b(e,r);g=f(y,g,u);null===m?l=y:m.sibling=y;m=y;r=p}if(v.done)return c(e,r),l;if(null===r){for(;!v.done;u++,v=h.next())v=q(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(r=d(e,r);!v.done;u++,v=h.next())v=z(r,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&r.delete(null===v.key?u:\nv.key),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);a&&r.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ac&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Zb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===ac:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===ac?f.props.children:f.props,h);d.ref=$f(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===ac?(d=af(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=$e(f.type,f.key,f.props,null,a.mode,h),h.ref=$f(a,d,f),h.return=a,a=h)}return g(a);case $b:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=cf(f,a.mode,h),d.return=a,a=d),g(a);if(Zf(f))return B(a,d,f,h);if(lc(f))return Q(a,d,f,h);l&&ag(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var cg=bg(!0),dg=bg(!1),eg=null,fg=null,gg=!1;\nfunction hg(a,b){var c=M(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function ig(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}\nfunction jg(a){if(gg){var b=fg;if(b){var c=b;if(!ig(a,b)){b=Fe(c);if(!b||!ig(a,b)){a.effectTag|=2;gg=!1;eg=a;return}hg(eg,c)}eg=a;fg=Ge(b)}else a.effectTag|=2,gg=!1,eg=a}}function kg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;eg=a}function lg(a){if(a!==eg)return!1;if(!gg)return kg(a),gg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ce(b,a.memoizedProps))for(b=fg;b;)hg(a,b),b=Fe(b);kg(a);fg=eg?Fe(a.stateNode):null;return!0}function mg(){fg=eg=null;gg=!1}var ng=Xb.ReactCurrentOwner;\nfunction P(a,b,c,d){b.child=null===a?dg(b,null,c,d):cg(b,a.child,c,d)}function og(a,b,c,d,e){c=c.render;var f=b.ref;Cf(b,e);d=c(d,f);b.effectTag|=1;P(a,b,d,e);return b.child}\nfunction pg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Xe(g)&&void 0===g.defaultProps&&null===c.compare)return b.tag=15,b.type=g,qg(a,b,g,d,e,f);a=$e(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:jd,c(e,d)&&a.ref===b.ref))return rg(a,b,f);b.effectTag|=1;a=Ze(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction qg(a,b,c,d,e,f){return null!==a&&e<f&&jd(a.memoizedProps,d)&&a.ref===b.ref?rg(a,b,f):sg(a,b,c,d,f)}function tg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function sg(a,b,c,d,e){var f=L(c)?Ke:J.current;f=Le(b,f);Cf(b,e);c=c(d,f);b.effectTag|=1;P(a,b,c,e);return b.child}\nfunction ug(a,b,c,d,e){if(L(c)){var f=!0;Qe(b)}else f=!1;Cf(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Wf(b,c,d,e),Yf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Nf.currentDispatcher.readContext(l):(l=L(c)?Ke:J.current,l=Le(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Xf(b,g,d,l);jf=!1;var x=b.memoizedState;k=g.state=x;var z=b.updateQueue;null!==z&&(sf(b,z,d,g,e),k=b.memoizedState);h!==d||x!==k||K.current||jf?(\"function\"===typeof m&&(Pf(b,c,m,d),k=b.memoizedState),(h=jf||Vf(b,c,h,d,x,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:O(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=Nf.currentDispatcher.readContext(l):(l=L(c)?Ke:J.current,l=Le(b,l)),m=c.getDerivedStateFromProps,\n(q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Xf(b,g,d,l),jf=!1,k=b.memoizedState,x=g.state=k,z=b.updateQueue,null!==z&&(sf(b,z,d,g,e),x=b.memoizedState),h!==d||k!==x||K.current||jf?(\"function\"===typeof m&&(Pf(b,c,m,d),x=b.memoizedState),(m=jf||Vf(b,c,h,d,k,x,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,x,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\nd,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return vg(a,b,c,d,f,e)}\nfunction vg(a,b,c,d,e,f){tg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Re(b,c,!1),rg(a,b,f);d=b.stateNode;ng.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=cg(b,a.child,null,f),b.child=cg(b,null,h,f)):P(a,b,h,f);b.memoizedState=d.state;e&&Re(b,c,!0);return b.child}function wg(a){var b=a.stateNode;b.pendingContext?Oe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Oe(a,b.context,!1);If(a,b.containerInfo)}\nfunction xg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;null===a?g?(g=e.fallback,e=af(null,d,0,null),0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=af(g,d,c,null),e.sibling=d,c=e,c.return=d.return=b):c=d=dg(b,null,e.children,c):null!==a.memoizedState?(d=a.child,a=d.sibling,g?(c=e.fallback,e=Ze(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==b.memoizedState?\nb.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Ze(a,c,a.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=cg(b,d.child,e.children,c)):(a=a.child,g?(g=e.fallback,e=af(null,d,0,null),e.child=a,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=af(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=cg(b,a,e.children,c));b.memoizedState=f;b.child=c;return d}\nfunction rg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=Ze(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Ze(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction yg(a,b,c){var d=b.expirationTime;if(null!==a&&a.memoizedProps===b.pendingProps&&!K.current&&d<c){switch(b.tag){case 3:wg(b);mg();break;case 5:Kf(b);break;case 1:L(b.type)&&Qe(b);break;case 4:If(b,b.stateNode.containerInfo);break;case 10:Af(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return xg(a,b,c);b=rg(a,b,c);return null!==b?b.sibling:null}}return rg(a,b,c)}b.expirationTime=0;switch(b.tag){case 2:d=b.elementType;null!==\na&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Le(b,J.current);Cf(b,c);e=d(a,e);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;if(L(d)){var f=!0;Qe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Pf(b,d,g,a);e.updater=Uf;b.stateNode=e;e._reactInternalFiber=b;Yf(b,d,a,c);b=vg(null,b,d,!0,f,c)}else b.tag=0,P(null,b,e,c),b=b.child;\nreturn b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=Mf(e);b.type=a;e=b.tag=Ye(a);f=O(a,f);g=void 0;switch(e){case 0:g=sg(null,b,a,f,c);break;case 1:g=ug(null,b,a,f,c);break;case 11:g=og(null,b,a,f,c);break;case 14:g=pg(null,b,a,O(a.type,f),d,c);break;default:t(\"283\",a)}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:O(d,e),sg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:O(d,e),ug(a,b,d,\ne,c);case 3:wg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;sf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)mg(),b=rg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)fg=Ge(b.stateNode.containerInfo),eg=b,e=gg=!0;e?(b.effectTag|=2,b.child=dg(b,null,d,c)):(P(a,b,d,c),mg());b=b.child}return b;case 5:return Kf(b),null===a&&jg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ce(d,e)?g=null:null!==\nf&&Ce(d,f)&&(b.effectTag|=16),tg(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=1,b=null):(P(a,b,g,c),b=b.child),b;case 6:return null===a&&jg(b),null;case 13:return xg(a,b,c);case 4:return If(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=cg(b,null,d,c):P(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:O(d,e),og(a,b,d,e,c);case 7:return P(a,b,b.pendingProps,c),b.child;case 8:return P(a,b,b.pendingProps.children,c),b.child;case 12:return P(a,b,b.pendingProps.children,\nc),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Af(b,f);if(null!==g){var h=g.value;f=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!K.current){b=rg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(1===g.tag){var k=mf(c);k.tag=2;of(g,k)}g.expirationTime<\nc&&(g.expirationTime=c);k=g.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(l.childExpirationTime<c)l.childExpirationTime=c,null!==k&&k.childExpirationTime<c&&(k.childExpirationTime=c);else if(null!==k&&k.childExpirationTime<c)k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=10===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==k;){if(k===b){k=null;break}g=k.sibling;\nif(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}P(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Cf(b,c),e=Df(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,P(a,b,d,c),b.child;case 14:return e=b.type,f=O(e.type,b.pendingProps),pg(a,b,e,f,d,c);case 15:return qg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:O(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Qe(b)):\na=!1,Cf(b,c),Wf(b,d,e,c),Yf(b,d,e,c),vg(null,b,d,!0,a,c);default:t(\"156\")}}function zg(a){a.effectTag|=4}var Ag=void 0,Bg=void 0,Fg=void 0,Gg=void 0;Ag=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bg=function(){};\nFg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;Hf(N.current);a=null;switch(c){case \"input\":f=Ac(g,f);d=Ac(g,d);a=[];break;case \"option\":f=ee(g,f);d=ee(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=ge(g,f);d=ge(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ye)}ve(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&xe(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&zg(b)}};Gg=function(a,b,c,d){c!==d&&zg(b)};\nfunction Hg(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=nc(c));null!==c&&mc(c.type);b=b.value;null!==a&&1===a.tag&&mc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Ig(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Jg(a,c)}else b.current=null}\nfunction Kg(a){\"function\"===typeof Te&&Te(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(null!==d){var e=a;try{d()}catch(f){Jg(e,f)}}c=c.next}while(c!==b)}break;case 1:Ig(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){Jg(a,f)}break;case 5:Ig(a);break;case 4:Lg(a)}}\nfunction Mg(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Ng(a){a:{for(var b=a.return;null!==b;){if(Mg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(pe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Mg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=ye)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction Lg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(Kg(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?(d=b.stateNode.containerInfo,e=!0):Kg(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction Og(a,b){switch(b.tag){case 0:case 11:case 14:case 15:break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Ha]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Cc(c,d);we(a,e);b=we(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?te(c,h):\"dangerouslySetInnerHTML\"===g?oe(c,h):\"children\"===g?pe(c,h):yc(c,g,h,b)}switch(a){case \"input\":Dc(c,d);break;case \"textarea\":ie(c,\nd);break;case \"select\":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?fe(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?fe(c,!!d.multiple,d.defaultValue,!0):fe(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}break;case 6:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=Qf()));if(null!==a)a:for(b=c=a;;){if(5===\nb.tag)a=b.stateNode,d?a.style.display=\"none\":(a=b.stateNode,f=b.memoizedProps.style,f=void 0!==f&&null!==f&&f.hasOwnProperty(\"display\")?f.display:null,a.style.display=se(\"display\",f));else if(6===b.tag)b.stateNode.nodeValue=d?\"\":b.memoizedProps;else if(13===b.tag&&null!==b.memoizedState){a=b.child.sibling;a.return=b;b=a;continue}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===c)break a;for(;null===b.sibling;){if(null===b.return||b.return===c)break a;b=b.return}b.sibling.return=\nb.return;b=b.sibling}break;case 17:break;default:t(\"163\")}}function Pg(a,b,c){c=mf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qg(d);Hg(a,b)};return c}\nfunction Rg(a,b,c){c=mf(c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Sg?Sg=new Set([this]):Sg.add(this));var c=b.value,e=b.stack;Hg(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Tg(a){switch(a.tag){case 1:L(a.type)&&Me(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Jf(a),Ne(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Lf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 4:return Jf(a),null;case 10:return Bf(a),null;default:return null}}\nvar Ug={readContext:Df},Vg=Xb.ReactCurrentOwner,Wg=1073741822,Xg=0,Yg=!1,R=null,S=null,T=0,Zg=-1,$g=!1,U=null,ah=!1,bh=null,ch=null,Sg=null;function dh(){if(null!==R)for(var a=R.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Me(b);break;case 3:Jf(b);Ne(b);break;case 5:Lf(b);break;case 4:Jf(b);break;case 10:Bf(b)}a=a.return}S=null;T=0;Zg=-1;$g=!1;R=null}function Sf(){null!==ch&&(ba.unstable_cancelCallback(bh),ch())}\nfunction eh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){R=a;a:{var e=b;b=a;var f=T;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:L(b.type)&&Me(b);break;case 3:Jf(b);Ne(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)lg(b),b.effectTag&=-3;Bg(b);break;case 5:Lf(b);var h=Hf(Gf.current);f=b.type;if(null!==e&&null!=b.stateNode)Fg(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var k=Hf(N.current);if(lg(b)){g=b;e=g.stateNode;var l=g.type,m=g.memoizedProps,q=h;e[Ga]=g;e[Ha]=m;f=void 0;h=l;switch(h){case \"iframe\":case \"object\":G(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<bb.length;l++)G(bb[l],e);break;case \"source\":G(\"error\",e);break;case \"img\":case \"image\":case \"link\":G(\"error\",e);G(\"load\",e);break;case \"form\":G(\"reset\",e);G(\"submit\",e);break;case \"details\":G(\"toggle\",e);break;case \"input\":Bc(e,m);G(\"invalid\",e);xe(q,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};G(\"invalid\",e);xe(q,\"onChange\");break;case \"textarea\":he(e,m),G(\"invalid\",e),xe(q,\"onChange\")}ve(h,m);l=null;for(f in m)m.hasOwnProperty(f)&&(k=m[f],\"children\"===f?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(f)&&null!=k&&xe(q,f));switch(h){case \"input\":Vb(e);Fc(e,m,!0);break;case \"textarea\":Vb(e);je(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=ye)}f=l;g.updateQueue=f;g=null!==f?!0:!1;g&&zg(b)}else{m=b;e=f;q=g;l=9===h.nodeType?h:h.ownerDocument;k===ke.html&&(k=le(e));k===ke.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof q.is?l=l.createElement(e,{is:q.is}):(l=l.createElement(e),\"select\"===e&&q.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ga]=m;e[Ha]=g;Ag(e,b,!1,!1);q=e;l=f;m=g;var x=h,z=we(l,m);switch(l){case \"iframe\":case \"object\":G(\"load\",\nq);h=m;break;case \"video\":case \"audio\":for(h=0;h<bb.length;h++)G(bb[h],q);h=m;break;case \"source\":G(\"error\",q);h=m;break;case \"img\":case \"image\":case \"link\":G(\"error\",q);G(\"load\",q);h=m;break;case \"form\":G(\"reset\",q);G(\"submit\",q);h=m;break;case \"details\":G(\"toggle\",q);h=m;break;case \"input\":Bc(q,m);h=Ac(q,m);G(\"invalid\",q);xe(x,\"onChange\");break;case \"option\":h=ee(q,m);break;case \"select\":q._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});G(\"invalid\",q);xe(x,\"onChange\");break;case \"textarea\":he(q,\nm);h=ge(q,m);G(\"invalid\",q);xe(x,\"onChange\");break;default:h=m}ve(l,h);k=void 0;var B=l,Q=q,v=h;for(k in v)if(v.hasOwnProperty(k)){var r=v[k];\"style\"===k?te(Q,r):\"dangerouslySetInnerHTML\"===k?(r=r?r.__html:void 0,null!=r&&oe(Q,r)):\"children\"===k?\"string\"===typeof r?(\"textarea\"!==B||\"\"!==r)&&pe(Q,r):\"number\"===typeof r&&pe(Q,\"\"+r):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=r&&xe(x,k):null!=r&&yc(Q,k,r,z))}switch(l){case \"input\":Vb(q);\nFc(q,m,!1);break;case \"textarea\":Vb(q);je(q,m);break;case \"option\":null!=m.value&&q.setAttribute(\"value\",\"\"+zc(m.value));break;case \"select\":h=q;h.multiple=!!m.multiple;q=m.value;null!=q?fe(h,!!m.multiple,q,!1):null!=m.defaultValue&&fe(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(q.onclick=ye)}(g=Be(f,g))&&zg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?Gg(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?t(\"166\"):void 0),e=Hf(Gf.current),Hf(N.current),lg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Ga]=g,(g=f.nodeValue!==e)&&zg(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Ga]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;R=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g!==f||0===(b.effectTag&1)&&g)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Jf(b);Bg(b);break;case 10:Bf(b);break;case 9:break;case 14:break;case 17:L(b.type)&&Me(b);break;default:t(\"156\")}R=null}b=a;if(1===T||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==R)return R;null!==c&&0===(c.effectTag&1024)&&(null===\nc.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Tg(a,T);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction fh(a){var b=yg(a.alternate,a,T);a.memoizedProps=a.pendingProps;null===b&&(b=eh(a));Vg.current=null;return b}\nfunction gh(a,b){Yg?t(\"243\"):void 0;Sf();Yg=!0;Vg.currentDispatcher=Ug;var c=a.nextExpirationTimeToWorkOn;if(c!==T||a!==S||null===R)dh(),S=a,T=c,R=Ze(S.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;do{try{if(b)for(;null!==R&&!hh();)R=fh(R);else for(;null!==R;)R=fh(R)}catch(B){if(zf=yf=xf=null,null===R)d=!0,Qg(B);else{null===R?t(\"271\"):void 0;var e=R,f=e.return;if(null===f)d=!0,Qg(B);else{a:{var g=a,h=f,k=e,l=B;f=T;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==l&&\"object\"===\ntypeof l&&\"function\"===typeof l.then){var m=l;l=h;var q=-1,x=-1;do{if(13===l.tag){var z=l.alternate;if(null!==z&&(z=z.memoizedState,null!==z)){x=10*(1073741822-z.timedOutAt);break}z=l.pendingProps.maxDuration;if(\"number\"===typeof z)if(0>=z)q=0;else if(-1===q||z<q)q=z}l=l.return}while(null!==l);l=h;do{if(z=13===l.tag)z=void 0===l.memoizedProps.fallback?!1:null===l.memoizedState;if(z){h=ih.bind(null,g,l,k,0===(l.mode&1)?1073741823:f);m.then(h,h);if(0===(l.mode&1)){l.effectTag|=64;k.effectTag&=-1957;\n1===k.tag&&null===k.alternate&&(k.tag=17);k.expirationTime=f;break a}-1===q?g=1073741823:(-1===x&&(x=10*(1073741822-hf(g,f))-5E3),g=x+q);0<=g&&Zg<g&&(Zg=g);l.effectTag|=2048;l.expirationTime=f;break a}l=l.return}while(null!==l);l=Error((mc(k.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+nc(k))}$g=!0;l=vf(l,k);g=h;do{switch(g.tag){case 3:k=\nl;g.effectTag|=2048;g.expirationTime=f;f=Pg(g,k,f);pf(g,f);break a;case 1:if(k=l,h=g.type,m=g.stateNode,0===(g.effectTag&64)&&(\"function\"===typeof h.getDerivedStateFromError||null!==m&&\"function\"===typeof m.componentDidCatch&&(null===Sg||!Sg.has(m)))){g.effectTag|=2048;g.expirationTime=f;f=Rg(g,k,f);pf(g,f);break a}}g=g.return}while(null!==g)}R=eh(e);continue}}}break}while(1);Yg=!1;zf=yf=xf=Vg.currentDispatcher=null;if(d)S=null,a.finishedWork=null;else if(null!==R)a.finishedWork=null;else{d=a.current.alternate;\nnull===d?t(\"281\"):void 0;S=null;if($g){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<c||0!==f&&f<c||0!==g&&g<c){gf(a,c);jh(a,d,c,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;c=a.nextExpirationTimeToWorkOn=c;b=a.expirationTime=1073741823;jh(a,d,c,b,-1);return}}b&&-1!==Zg?(gf(a,c),b=10*(1073741822-hf(a,c)),b<Zg&&(Zg=b),b=10*(1073741822-Qf()),b=Zg-b,jh(a,d,c,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=c,a.finishedWork=d)}}\nfunction Jg(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Sg||!Sg.has(d))){a=vf(b,a);a=Rg(c,a,1073741823);of(c,a);Tf(c,1073741823);return}break;case 3:a=vf(b,a);a=Pg(c,a,1073741823);of(c,a);Tf(c,1073741823);return}c=c.return}3===a.tag&&(c=vf(b,a),c=Pg(a,c,1073741823),of(a,c),Tf(a,1073741823))}\nfunction Rf(a,b){0!==Xg?a=Xg:Yg?a=ah?1073741823:T:b.mode&1?(a=kh?1073741822-10*(((1073741822-a+15)/10|0)+1):1073741822-25*(((1073741822-a+500)/25|0)+1),null!==S&&a===T&&--a):a=1073741823;kh&&(0===lh||a<lh)&&(lh=a);return a}\nfunction ih(a,b,c,d){var e=a.earliestSuspendedTime;var f=a.latestSuspendedTime;if(0!==e&&d<=e&&d>=f){f=e=d;a.didError=!1;var g=a.latestPingedTime;if(0===g||g>f)a.latestPingedTime=f;ff(f,a)}else e=Qf(),e=Rf(e,b),ef(a,e);0!==(b.mode&1)&&a===S&&T===d&&(S=null);mh(b,e);0===(b.mode&1)&&(mh(c,e),1===c.tag&&null!==c.stateNode&&(b=mf(e),b.tag=2,of(c,b)));c=a.expirationTime;0!==c&&nh(a,c)}\nfunction mh(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction Tf(a,b){a=mh(a,b);null!==a&&(!Yg&&0!==T&&b>T&&dh(),ef(a,b),Yg&&!ah&&S===a||nh(a,a.expirationTime),oh>ph&&(oh=0,t(\"185\")))}function qh(a,b,c,d,e){var f=Xg;Xg=1073741823;try{return a(b,c,d,e)}finally{Xg=f}}var rh=null,V=null,sh=0,th=void 0,W=!1,uh=null,X=0,lh=0,vh=!1,wh=null,Z=!1,xh=!1,kh=!1,yh=null,zh=ba.unstable_now(),Ah=1073741822-(zh/10|0),Bh=Ah,ph=50,oh=0,Ch=null;function Dh(){Ah=1073741822-((ba.unstable_now()-zh)/10|0)}\nfunction Eh(a,b){if(0!==sh){if(b<sh)return;null!==th&&ba.unstable_cancelCallback(th)}sh=b;a=ba.unstable_now()-zh;th=ba.unstable_scheduleCallback(Fh,{timeout:10*(1073741822-b)-a})}function jh(a,b,c,d,e){a.expirationTime=d;0!==e||hh()?0<e&&(a.timeoutHandle=De(Gh.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Gh(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;Dh();Bh=Ah;Hh(a,c)}function Qf(){if(W)return Bh;Ih();if(0===X||1===X)Dh(),Bh=Ah;return Bh}\nfunction nh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===V?(rh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=rh)):b>a.expirationTime&&(a.expirationTime=b);W||(Z?xh&&(uh=a,X=1073741823,Jh(a,1073741823,!1)):1073741823===b?Kh(1073741823,!1):Eh(a,b))}\nfunction Ih(){var a=0,b=null;if(null!==V)for(var c=V,d=rh;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===V?t(\"244\"):void 0;if(d===d.nextScheduledRoot){rh=V=d.nextScheduledRoot=null;break}else if(d===rh)rh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=rh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===V)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}uh=b;X=a}var Lh=!1;function hh(){return Lh?!0:ba.unstable_shouldYield()?Lh=!0:!1}function Fh(){try{if(!hh()&&null!==rh){Dh();var a=rh;do{var b=a.expirationTime;0!==b&&Ah<=b&&(a.nextExpirationTimeToWorkOn=Ah);a=a.nextScheduledRoot}while(a!==rh)}Kh(0,!0)}finally{Lh=!1}}\nfunction Kh(a,b){Ih();if(b)for(Dh(),Bh=Ah;null!==uh&&0!==X&&a<=X&&!(Lh&&Ah>X);)Jh(uh,X,Ah>X),Ih(),Dh(),Bh=Ah;else for(;null!==uh&&0!==X&&a<=X;)Jh(uh,X,!1),Ih();b&&(sh=0,th=null);0!==X&&Eh(uh,X);oh=0;Ch=null;if(null!==yh)for(a=yh,yh=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){vh||(vh=!0,wh=d)}}if(vh)throw a=wh,wh=null,vh=!1,a;}function Hh(a,b){W?t(\"253\"):void 0;uh=a;X=b;Jh(a,b,!1);Kh(1073741823,!1)}\nfunction Jh(a,b,c){W?t(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Mh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),gh(a,c),d=a.finishedWork,null!==d&&(hh()?a.finishedWork=d:Mh(a,d,b)))}else d=a.finishedWork,null!==d?Mh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),gh(a,c),d=a.finishedWork,null!==d&&Mh(a,d,b));W=!1}\nfunction Mh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===yh?yh=[d]:yh.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===Ch?oh++:(Ch=a,oh=0);ah=Yg=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=e>d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=\n0):(e=a.latestPendingTime,0!==e&&(e>d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?ef(a,d):d<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,ef(a,d)):d>e&&ef(a,d));ff(0,a);Vg.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ze=Hd;e=Td();if(Ud(e)){if(\"selectionStart\"in e)var f={start:e.selectionStart,\nend:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(db){f=null;break a}var l=0,m=-1,q=-1,x=0,z=0,B=e,Q=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(q=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;Q=B;B=v}for(;;){if(B===e)break b;Q===f&&\n++x===h&&(m=l);Q===k&&++z===g&&(q=l);if(null!==(v=B.nextSibling))break;B=Q;Q=B.parentNode}B=v}f=-1===m||-1===q?null:{start:m,end:q}}else f=null}f=f||{start:0,end:0}}else f=null;Ae={focusedElem:e,selectionRange:f};Hd=!1;for(U=d;null!==U;){e=!1;f=void 0;try{for(;null!==U;){if(U.effectTag&256)a:{var r=U.alternate;h=U;switch(h.tag){case 0:case 11:case 15:break a;case 1:if(h.effectTag&256&&null!==r){var u=r.memoizedProps,y=r.memoizedState,Y=h.stateNode,Th=Y.getSnapshotBeforeUpdate(h.elementType===h.type?\nu:O(h.type,u),y);Y.__reactInternalSnapshotBeforeUpdate=Th}break a;case 3:case 5:case 6:case 4:case 17:break a;default:t(\"163\")}}U=U.nextEffect}}catch(db){e=!0,f=db}e&&(null===U?t(\"178\"):void 0,Jg(U,f),null!==U&&(U=U.nextEffect))}for(U=d;null!==U;){r=!1;u=void 0;try{for(;null!==U;){var w=U.effectTag;w&16&&pe(U.stateNode,\"\");if(w&128){var C=U.alternate;if(null!==C){var p=C.ref;null!==p&&(\"function\"===typeof p?p(null):p.current=null)}}switch(w&14){case 2:Ng(U);U.effectTag&=-3;break;case 6:Ng(U);U.effectTag&=\n-3;Og(U.alternate,U);break;case 4:Og(U.alternate,U);break;case 8:y=U,Lg(y),y.return=null,y.child=null,y.alternate&&(y.alternate.child=null,y.alternate.return=null)}U=U.nextEffect}}catch(db){r=!0,u=db}r&&(null===U?t(\"178\"):void 0,Jg(U,u),null!==U&&(U=U.nextEffect))}p=Ae;C=Td();w=p.focusedElem;u=p.selectionRange;if(C!==w&&w&&w.ownerDocument&&Sd(w.ownerDocument.documentElement,w)){null!==u&&Ud(w)&&(C=u.start,p=u.end,void 0===p&&(p=C),\"selectionStart\"in w?(w.selectionStart=C,w.selectionEnd=Math.min(p,\nw.value.length)):(p=(C=w.ownerDocument||document)&&C.defaultView||window,p.getSelection&&(p=p.getSelection(),y=w.textContent.length,r=Math.min(u.start,y),u=void 0===u.end?r:Math.min(u.end,y),!p.extend&&r>u&&(y=u,u=r,r=y),y=Rd(w,r),Y=Rd(w,u),y&&Y&&(1!==p.rangeCount||p.anchorNode!==y.node||p.anchorOffset!==y.offset||p.focusNode!==Y.node||p.focusOffset!==Y.offset)&&(C=C.createRange(),C.setStart(y.node,y.offset),p.removeAllRanges(),r>u?(p.addRange(C),p.extend(Y.node,Y.offset)):(C.setEnd(Y.node,Y.offset),\np.addRange(C))))));C=[];for(p=w;p=p.parentNode;)1===p.nodeType&&C.push({element:p,left:p.scrollLeft,top:p.scrollTop});\"function\"===typeof w.focus&&w.focus();for(w=0;w<C.length;w++)p=C[w],p.element.scrollLeft=p.left,p.element.scrollTop=p.top}Ae=null;Hd=!!ze;ze=null;a.current=b;for(U=d;null!==U;){d=!1;w=void 0;try{for(C=c;null!==U;){var Fb=U.effectTag;if(Fb&36){var Gb=U.alternate;p=U;r=C;switch(p.tag){case 0:case 11:case 15:break;case 1:var wc=p.stateNode;if(p.effectTag&4)if(null===Gb)wc.componentDidMount();\nelse{var ci=p.elementType===p.type?Gb.memoizedProps:O(p.type,Gb.memoizedProps);wc.componentDidUpdate(ci,Gb.memoizedState,wc.__reactInternalSnapshotBeforeUpdate)}var Cg=p.updateQueue;null!==Cg&&tf(p,Cg,wc,r);break;case 3:var Dg=p.updateQueue;if(null!==Dg){u=null;if(null!==p.child)switch(p.child.tag){case 5:u=p.child.stateNode;break;case 1:u=p.child.stateNode}tf(p,Dg,u,r)}break;case 5:var di=p.stateNode;null===Gb&&p.effectTag&4&&Be(p.type,p.memoizedProps)&&di.focus();break;case 6:break;case 4:break;\ncase 12:break;case 13:break;case 17:break;default:t(\"163\")}}if(Fb&128){var Ic=U.ref;if(null!==Ic){var Eg=U.stateNode;switch(U.tag){case 5:var ce=Eg;break;default:ce=Eg}\"function\"===typeof Ic?Ic(ce):Ic.current=ce}}U=U.nextEffect}}catch(db){d=!0,w=db}d&&(null===U?t(\"178\"):void 0,Jg(U,w),null!==U&&(U=U.nextEffect))}Yg=ah=!1;\"function\"===typeof Se&&Se(b.stateNode);Fb=b.expirationTime;b=b.childExpirationTime;b=b>Fb?b:Fb;0===b&&(Sg=null);a.expirationTime=b;a.finishedWork=null}\nfunction Qg(a){null===uh?t(\"246\"):void 0;uh.expirationTime=0;vh||(vh=!0,wh=a)}function Nh(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Kh(1073741823,!1)}}function Oh(a,b){if(Z&&!xh){xh=!0;try{return a(b)}finally{xh=!1}}return a(b)}function Ph(a,b,c){if(kh)return a(b,c);Z||W||0===lh||(Kh(lh,!1),lh=0);var d=kh,e=Z;Z=kh=!0;try{return a(b,c)}finally{kh=d,(Z=e)||W||Kh(1073741823,!1)}}\nfunction Qh(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===kd(c)&&1===c.tag?void 0:t(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(L(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);t(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(L(h)){c=Pe(c,h,g);break a}}c=g}else c=Je;null===b.context?b.context=c:b.pendingContext=c;b=e;e=mf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nSf();of(f,e);Tf(f,d);return d}function Rh(a,b,c,d){var e=b.current,f=Qf();e=Rf(f,e);return Qh(a,b,c,e,d)}function Sh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Uh(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$b,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nCb=function(a,b,c){switch(b){case \"input\":Dc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=La(d);e?void 0:t(\"90\");Wb(d);Dc(d,e)}}}break;case \"textarea\":ie(a,c);break;case \"select\":b=c.value,null!=b&&fe(a,!!c.multiple,b,!1)}};\nfunction Vh(a){var b=1073741822-25*(((1073741822-Qf()+500)/25|0)+1);b>=Wg&&(b=Wg-1);this._expirationTime=Wg=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Vh.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Wh;Qh(a,b,null,c,d._onCommit);return d};\nVh.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nVh.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Hh(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Vh.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Wh(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Wh.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nWh.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\nfunction Xh(a,b,c){b=M(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nXh.prototype.render=function(a,b){var c=this._internalRoot,d=new Wh;b=void 0===b?null:b;null!==b&&d.then(b);Rh(a,c,null,d._onCommit);return d};Xh.prototype.unmount=function(a){var b=this._internalRoot,c=new Wh;a=void 0===a?null:a;null!==a&&c.then(a);Rh(null,b,null,c._onCommit);return c};Xh.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Wh;c=void 0===c?null:c;null!==c&&e.then(c);Rh(b,d,a,e._onCommit);return e};\nXh.prototype.createBatch=function(){var a=new Vh(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Yh(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Kb=Nh;Lb=Ph;Mb=function(){W||0===lh||(Kh(lh,!1),lh=0)};\nfunction Zh(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Xh(a,!1,b)}\nfunction $h(a,b,c,d,e){Yh(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Sh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Zh(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Sh(f._internalRoot);h.call(a)}}Oh(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Sh(f._internalRoot)}\nfunction ai(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Yh(b)?void 0:t(\"200\");return Uh(a,b,null,c)}\nvar bi={createPortal:ai,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=nd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return $h(null,a,b,!0,c)},render:function(a,b,c){return $h(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return $h(a,b,c,!1,d)},unmountComponentAtNode:function(a){Yh(a)?\nvoid 0:t(\"40\");return a._reactRootContainer?(Oh(function(){$h(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ai.apply(void 0,arguments)},unstable_batchedUpdates:Nh,unstable_interactiveUpdates:Ph,flushSync:function(a,b){W?t(\"187\"):void 0;var c=Z;Z=!0;try{return qh(a,b)}finally{Z=c,Kh(1073741823,!1)}},unstable_flushControlled:function(a){var b=Z;Z=!0;try{qh(a)}finally{(Z=b)||W||Kh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ja,\nKa,La,Ca.injectEventPluginsByName,qa,Ra,function(a){za(a,Qa)},Ib,Jb,Jd,Ea]},unstable_createRoot:function(a,b){Yh(a)?void 0:t(\"299\",\"unstable_createRoot\");return new Xh(a,!0,null!=b&&!0===b.hydrate)}};(function(a){var b=a.findFiberByHostInstance;return Ve(n({},a,{findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ia,bundleType:0,version:\"16.6.3\",rendererPackageName:\"react-dom\"});\nvar ei={default:bi},fi=ei&&bi||ei;module.exports=fi.default||fi;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v16.6.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,f=!1,h=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var e=h,Q=l;h=a;l=b;try{var g=c()}finally{h=e,l=Q}if(\"function\"===typeof g)if(g={callback:g,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=g.next=g.previous=g;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=g,p());b=c.previous;b.next=c.previous=g;g.next=c;g.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=f;f=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,f=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w;\nif(\"undefined\"!==typeof window&&window._schedMock){var G=window._schedMock;r=G[0];q=G[1];w=G[2]}else if(\"undefined\"===typeof window||\"function\"!==typeof window.addEventListener){var H=null,I=-1,J=function(a,b){if(null!==H){var c=H;H=null;try{I=b,c(a)}finally{I=-1}}};r=function(a,b){-1!==I?setTimeout(r,0,a,b):(H=a,setTimeout(J,b,!0,b),setTimeout(J,1073741823,!1,1073741823))};q=function(){H=null};w=function(){return!1};exports.unstable_now=function(){return-1===I?0:I}}else{\"undefined\"!==typeof console&&\n(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);\nwindow.addEventListener(\"message\",function(a){if(a.source===window&&a.data===T){L=!1;a=K;var b=M;K=null;M=-1;var c=exports.unstable_now(),e=!1;if(0>=P-c)if(-1!==b&&b<=c)e=!0;else{N||(N=!0,E(U));K=a;M=b;return}if(null!==a){O=!0;try{a(e)}finally{O=!1}}}},!1);var U=function(a){if(null!==K){E(U);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,window.postMessage(T,\"*\"))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?window.postMessage(T,\"*\"):N||(N=!0,E(U))};q=function(){K=null;L=!1;M=-1}}\nexports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=h,e=k;h=a;k=exports.unstable_now();try{return b()}finally{h=c,k=e,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(h){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:h,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var e=d;do{if(e.expirationTime>b){c=e;break}e=e.next}while(e!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=h;return function(){var c=h,e=k;h=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{h=c,k=e,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return h};\nexports.unstable_shouldYield=function(){return!f&&(null!==d&&d.expirationTime<l||w())};\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '98';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\treturn this.applyMatrix4( matrix.getInverse( camera.projectionMatrix ) ).applyMatrix4( camera.matrixWorld );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\\n\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n}\\n\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position, 1.0 );\\n\\tgl_Position.z = 1.0;\\n}\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function () {\n\n\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( hslA );\n\t\t\tcolor.getHSL( hslB );\n\n\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? 35048 : 35044;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, 35044 );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tvar q1 = new Quaternion();\n\t\tvar m1 = new Matrix4();\n\t\tvar target = new Vector3();\n\t\tvar position = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\ttarget.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}(),\n\n\tgetUV: function () {\n\n\t\tvar barycoord = new Vector3();\n\n\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, result ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = ( background.isWebGLRenderTargetCube ) ? background.texture : background;\n\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.push( planeMesh, planeMesh.geometry, planeMesh.material, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, 34963 );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8B5F: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], renderer );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, 35713 ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === 35633 ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\tarray.push( renderer.gammaFactor );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: {\n\t\t\tstateID: - 1,\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash.stateID = state.id;\n\t\tstate.hash.directionalLength = directionalLength;\n\t\tstate.hash.pointLength = pointLength;\n\t\tstate.hash.spotLength = spotLength;\n\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\tstate.hash.hemiLength = hemiLength;\n\t\tstate.hash.shadowsLength = shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( 3042 );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( 34467 );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) return 33326;\n\t\t\tif ( glType === 5131 ) return 33325;\n\t\t\tif ( glType === 5121 ) return 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) return 34837;\n\t\t\tif ( glType === 5131 ) return 34843;\n\t\t\tif ( glType === 5121 ) return 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) return 34836;\n\t\t\tif ( glType === 5131 ) return 34842;\n\t\t\tif ( glType === 5121 ) return 32856;\n\n\t\t}\n\n\t\treturn glFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType;\n\n\t\tif ( texture.isDataTexture3D ) {\n\n\t\t\ttextureType = 32879;\n\n\t\t} else {\n\n\t\t\ttextureType = 3553;\n\n\t\t}\n\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\t\tstate.activeTexture( 33984 + slot );\n\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( 36161, 32854, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return 10497;\n\t\tif ( p === ClampToEdgeWrapping ) return 33071;\n\t\tif ( p === MirroredRepeatWrapping ) return 33648;\n\n\t\tif ( p === NearestFilter ) return 9728;\n\t\tif ( p === NearestMipMapNearestFilter ) return 9984;\n\t\tif ( p === NearestMipMapLinearFilter ) return 9986;\n\n\t\tif ( p === LinearFilter ) return 9729;\n\t\tif ( p === LinearMipMapNearestFilter ) return 9985;\n\t\tif ( p === LinearMipMapLinearFilter ) return 9987;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === AddEquation ) return 32774;\n\t\tif ( p === SubtractEquation ) return 32778;\n\t\tif ( p === ReverseSubtractEquation ) return 32779;\n\n\t\tif ( p === ZeroFactor ) return 0;\n\t\tif ( p === OneFactor ) return 1;\n\t\tif ( p === SrcColorFactor ) return 768;\n\t\tif ( p === OneMinusSrcColorFactor ) return 769;\n\t\tif ( p === SrcAlphaFactor ) return 770;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\n\t\tif ( p === DstAlphaFactor ) return 772;\n\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\n\n\t\tif ( p === DstColorFactor ) return 774;\n\t\tif ( p === OneMinusDstColorFactor ) return 775;\n\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return 32775;\n\t\t\t\tif ( p === MaxEquation ) return 32776;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author jsantell / https://www.jsantell.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar cameraLPos = new Vector3();\nvar cameraRPos = new Vector3();\n\n/**\n * Assumes 2 cameras that are parallel and share an X-axis, and that\n * the cameras' projection and world matrices have already been set.\n * And that near and far planes are identical for both cameras.\n * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n */\nfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\tvar projL = cameraL.projectionMatrix.elements;\n\tvar projR = cameraR.projectionMatrix.elements;\n\n\t// VR systems will have identical far and near planes, and\n\t// most likely identical top and bottom frustum extents.\n\t// Use the left camera for these values.\n\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\tvar left = near * leftFov;\n\tvar right = near * rightFov;\n\n\t// Calculate the new camera's position offset from the\n\t// left camera. xOffset should be roughly half `ipd`.\n\tvar zOffset = ipd / ( - leftFov + rightFov );\n\tvar xOffset = zOffset * - leftFov;\n\n\t// TODO: Better way to apply this offset?\n\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\tcamera.translateX( xOffset );\n\tcamera.translateZ( zOffset );\n\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t// Find the union of the frustum values of the cameras and scale\n\t// the values so that the near plane's position does not change in world space,\n\t// although must now be relative to the new union camera.\n\tvar near2 = near + zOffset;\n\tvar far2 = far + zOffset;\n\tvar left2 = left - xOffset;\n\tvar right2 = right + ( ipd - xOffset );\n\tvar top2 = topFov * far / far2 * near2;\n\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReferenceType = 'stage';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\tvar renderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\n\n\t\tif ( device === null ) {\n\n\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReference = null;\n\tvar frameOfReferenceType = 'stage';\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfReference !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl, { framebufferScaleFactor: framebufferScaleFactor } );\n\t\t\tsession.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfReference = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tvar controller = controllers[ i ];\n\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfReference );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfReference );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tif ( 'targetRay' in inputPose ) {\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\n\n\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\n\n\t\t\t\t\t\t// DEPRECATED\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = null;\n\n\tif ( typeof navigator !== 'undefined' ) {\n\n\t\tvr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\t}\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\t\tif ( lightsHash === undefined ) {\n\n\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t}\n\n\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture3D = ( function () {\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture3D( texture, slot ) {\n\n\t\t\ttextures.setTexture3D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\tuvA.set( 0, 0 );\n\t\t\tuvB.set( 1, 0 );\n\t\t\tuvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n\t// a matcap is required\n\n\tif ( this.matcap === null ) {\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = 1;\n\t\tcanvas.height = 1;\n\n\t\tvar context = canvas.getContext( '2d' );\n\n\t\tcontext.fillStyle = '#fff';\n\t\tcontext.fillRect( 0, 0, 1, 1 );\n\n\t\tthis.matcap = new THREE.CanvasTexture( canvas );\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AnimationLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\tonLoad( animations );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g$/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, path );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, path ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, this.resourcePath || path, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\t\t\t\t\tcache[ data.uuid ] = materials[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\t\tvar clock = new Clock();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar panner = this.panner;\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( orientation.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axiz.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new THREE.Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new THREE.Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, DataTexture3D, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, AnimationLoader, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ImageUtils, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, MeshMatcapMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RedFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","import React from 'react';\nimport * as THREE from 'three';\n\nclass ThreeScene extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.windowHalfX = window.innerWidth / 2;\n        this.windowHalfY = window.innerHeight / 2;\n\n        this.mouseX = 0;\n        this.mouseY = 0;\n\n        this.start = this.start.bind(this);\n        this.stop = this.stop.bind(this);\n        this.renderScene = this.renderScene.bind(this);\n        this.animate = this.animate.bind(this);\n        this.onWindowResize = this.onWindowResize.bind(this);\n        this.onDocumentMouseMove = this.onDocumentMouseMove.bind(this);\n    }\n    \n    componentDidMount() {\n        const width = this.mount.clientWidth\n        const height = this.mount.clientHeight\n\n        // let canvas = document.getElementsByTagName(\"canvas\")[0]\n        debugger;\n        //ADD SCENE\n        this.scene = new THREE.Scene()\n        //ADD CAMERA\n        this.camera = new THREE.PerspectiveCamera(20, window.innerWidth / window.innerHeight, 1, 10000);\n        this.camera.position.z = 1800;\n\n        this.light = new THREE.DirectionalLight(0xffffff);\n        this.light.position.set(0, 0, 1);\n        this.scene.add(this.light);\n\n        // let canvas = this.renderer.domElement;\n        // console.log(canvas);\n        // var context = canvas.getContext('2d');\n        // console.log(canvas.getContext('2d'));\n\n        // var gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n        // gradient.addColorStop(0.1, 'rgba(210,210,210,1)');\n        // gradient.addColorStop(1, 'rgba(255,255,255,1)');\n        // context.fillStyle = gradient;\n        // context.fillRect(0, 0, canvas.width, canvas.height);\n        // var shadowTexture = new THREE.CanvasTexture(canvas);\n        // var shadowMaterial = new THREE.MeshBasicMaterial({ map: shadowTexture });\n        // var shadowGeo = new THREE.PlaneBufferGeometry(300, 300, 1, 1);\n        // var shadowMesh;\n        // shadowMesh = new THREE.Mesh(shadowGeo, shadowMaterial);\n        // shadowMesh.position.y = - 250;\n        // shadowMesh.rotation.x = - Math.PI / 2;\n        // this.scene.add(shadowMesh);\n\n        // shadowMesh = new THREE.Mesh(shadowGeo, shadowMaterial);\n        // shadowMesh.position.y = - 250;\n        // shadowMesh.position.x = - 400;\n        // shadowMesh.rotation.x = - Math.PI / 2;\n        // this.scene.add(shadowMesh);\n        // shadowMesh = new THREE.Mesh(shadowGeo, shadowMaterial);\n        // shadowMesh.position.y = - 250;\n        // shadowMesh.position.x = 400;\n        // shadowMesh.rotation.x = - Math.PI / 2;\n        // this.scene.add(shadowMesh);\n\n\n        //ADD RENDERER\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n        this.renderer.setClearColor('#000000', 0);\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.renderer.setSize(width, height);\n\n        this.mount.appendChild(this.renderer.domElement)\n\n        //ADD GEOMETRY\n        var radius = 200;\n        var geometry1 = new THREE.IcosahedronBufferGeometry(radius, 1);\n        var count = geometry1.attributes.position.count;\n        geometry1.addAttribute('color', new THREE.BufferAttribute(new Float32Array(count * 3), 3));\n        var color = new THREE.Color();\n        var positions1 = geometry1.attributes.position;\n        var colors1 = geometry1.attributes.color;\n\n        for (var i = 0; i < count; i++) {\n            // color.setHSL((positions1.getY(i) / radius + 1) / 2, 1.0, 0.5);\n            color.setRGB(1, 0.8 - (positions1.getY(i) / radius + 1) / 2, 0);\n            colors1.setXYZ(i, color.r, color.g, color.b);\n        }\n        var material = new THREE.MeshPhongMaterial({\n            color: 0xffffff,\n            flatShading: true,\n            vertexColors: THREE.VertexColors,\n            shininess: 0\n        });\n        var wireframeMaterial = new THREE.MeshBasicMaterial({ color: 0x000000, wireframe: true, transparent: true });\n        var mesh = new THREE.Mesh(geometry1, material);\n        var wireframe = new THREE.Mesh(geometry1, wireframeMaterial);\n        mesh.add(wireframe);\n        mesh.position.x = 0;\n        mesh.rotation.x = - 1.87;\n        this.scene.add(mesh);\n\n        // const geometry = new THREE.BoxGeometry(1, 1, 1)\n        // const material = new THREE.MeshBasicMaterial({ color: '#433F81' })\n        // this.cube = new THREE.Mesh(geometry, material)\n        // this.scene.add(this.cube)\n        document.addEventListener('mousemove', this.onDocumentMouseMove, false);\n        window.addEventListener('resize', this.onWindowResize, false);\n        this.start()\n    }\n\n    componentWillUnmount() {\n        this.stop()\n        this.mount.removeChild(this.renderer.domElement)\n    }\n\n    onWindowResize() {\n        this.windowHalfX = window.innerWidth / 2;\n        this.windowHalfY = window.innerHeight / 2;        \n\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    onDocumentMouseMove(e) {\n        this.mouseX = (e.clientX - this.windowHalfX);\n        this.mouseY = (e.clientY - this.windowHalfY);\n    }\n\n    start(){\n        if (!this.frameId) {\n            this.frameId = requestAnimationFrame(this.animate)\n        }\n    }\n\n    stop (){\n        cancelAnimationFrame(this.frameId)\n    }\n\n    animate () {\n        // this.cube.rotation.x += 0.01\n        // this.cube.rotation.y += 0.01\n        \n\n        // console.log(this.camera.position);\n        \n\n        this.renderScene()\n        this.frameId = window.requestAnimationFrame(this.animate)\n    }\n\n    renderScene () {\n        this.camera.position.x += (this.mouseX - this.camera.position.x) * 0.05;\n        this.camera.position.y += (- this.mouseY - this.camera.position.y) * 0.05;\n        this.camera.lookAt(this.scene.position);\n\n        this.renderer.render(this.scene, this.camera)\n    }\n\n    render() {\n        return (\n            <div \n                style={{ width: '100%', height: '100%' }}\n                ref={(mount) => { this.mount = mount }}\n            />\n        )\n    }\n}\n\nexport default ThreeScene;","import React from 'react';\nimport ThreeScene from './middleground/ThreeScene'\n\nconst App = () => (\n    <main id=\"App\">\n        <ThreeScene/>\n    </main>\n);\n\nexport default App;","//React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//Components\nimport App from './components/App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const root = document.getElementById('root');\n    ReactDOM.render(<App />, root);\n});\n"],"sourceRoot":""}